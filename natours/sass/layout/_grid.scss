.row {
    // NOTE: If the viewport is smaller than this, then fill all the available space, otherwise stick to value below.
    max-width: $grid-width;
    background-color: #eee;
    margin: 0 auto;
    
    // NOTE: Without the not() it simply selects the last child. 
    // With not() it now does the opposite by selecting everything except the last child.
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;
    }

    // NOTE: Adds height to elements whose heights have been collapsed due to floating their children elements.
    @include clearfix;

    // NOTE: [] is the attribute selector in sass.
    // NOTE: class^= "col-" means select all elements with class attributes that start with "col-"
    // NOTE: class*= "col-" means select all elements with class attributes contain with "col-"
    // NOTE: class$= "col-" means select all elements with class attributes end with "col-"
    [class^= "col-"] {
        background-color: orangered;
        // NOTE: Floating elements, collapses the height. Need to use the clearfix solution to bring it back.
        float: left;
    
        &:not(:last-child){
            margin-right: $gutter-horizontal;
        }
    }

    .col-1-of-2 {
        // NOTE: calc() function is used to calculate values in sass.
        // NOTE: If using $vars in a calc() function you need to surround them with #{} wrapper.
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }
}