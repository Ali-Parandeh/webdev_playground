* {
    margin: 0;
    padding: 0;
  }
  
$color-primary: #f9ed69; // Yellow color
$color-text-dark: #333;
$color-secondary: rgb(77, 183, 224);
$color-triatary: rgb(168, 11, 11);
$color-text-light: #eee;
$width-button: 150px;


@mixin clearfix {
  &::after {
    display: table;
    content: "";
    clear: both;
  }
}

@mixin style-link-text($color) {
  text-decoration: none;
  text-transform: uppercase;
  color: $color;
}

@function divide($a, $b) {
  @return ($a / $b) * 1px;
}

nav {
  margin: divide(60, 2); // 30px
  background-color: $color-primary;
  
  @include clearfix;
}

.navigation {
  list-style: none;
  float: left;
  
  li {
    display: inline-block;
    margin-left: 30px;
    
    &:first-child { // & = this keyword in JS
      margin: 0;
    }
    
    a:link {
      @include style-link-text($color-text-dark);
    }
    
  }
  
}
  
.buttons {
  float: right;
}


// NOTE: Where placeholders are extended inside any selectors, 
// the selector names are copied over the placeholder definition name instead. 
// @extend %placeholder {....} ==> .btn-main, .btn:link {....} 

%btn-placeholder {
  padding: 10px;
  display: inline-block;
  text-align: center;
  border-radius: 100px;
  width: $width-button;

  // NOTE: The rules defined in a mixin definition is copied wherever the mixin is imported. 
  // @import mixinName ==> padding: 10px, color: red, ...
  @include style-link-text($color-text-light);
}

.btn-main {
  &:link {
    @extend %btn-placeholder;
    background-color: $color-secondary;
  }

  &:hover {
    background-color: darken($color-secondary, 15%);
  }
  }

.btn-hot {
  &:link {
    @extend %btn-placeholder;
    background-color: $color-triatary;
  }
  
  &:hover {
  background-color: lighten($color-triatary, 15%);
  }
}