/* Basic reset to ensure all browsers will render the page similarly */
/* NOTE: Need to also apply the rules below to all ::after & ::before psuedo elements */
*, *::after, *::before {
  margin: 0;
  padding: 0;
  /* 
    NOTE: Whenever possible use inheritance instead of universal selector *
    Any child element on the page to inherit box-sizing from body 
    */
  box-sizing: inherit; }

html {
  /* 
    NOTE: Browsers usually have a default font-size of 16px.
    NOTE: Root document font-size is always specified for html. Now 1rem = 10px
    NOTE: Specifying absolute pixels is bad practice as users with impaird vision cannot change this. 
    Need to specify this in relative to browser default font sizes using percentages. 62.5% of 16px is 10px.
    NOTE: Sizes specified in rems do not work in IE9 and older. 
    */
  font-size: 62.5%; }

body {
  /* Borders and paddings to no longer be added to total width and height that are specified for a box  */
  box-sizing: border-box; }

/* Defining animation - NOTE: To optimise performance only animate two properties: opacity and/or transform */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px); }
  80% {
    transform: translateX(10px); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px); }
  80% {
    transform: translateX(-10px); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px); }
  100% {
    opacity: 1;
    transform: translate(0); } }

/* Font specifications always go into body which will be inherited by all child elements */
body {
  font-family: "Lato", sans-serif;
  /* font-size: 16px; */
  /* 1.7 times bigger */
  line-height: 1.7;
  color: #777;
  /* Adds 3rem = 30px whitespace around the whole page */
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    /* Creates line-break before and after the element */
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  letter-spacing: 2px;
  transition: all 0.2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../../img/nat-4.jpg");
  background-size: cover;
  transform: skewY(-7deg);
  margin-top: -11.5rem; }
  .section-features > * {
    transform: skewY(7deg); }

.section-tours {
  background-color: #f7f7f7;
  padding: 25rem 0 50rem 0;
  margin-top: -11.5rem; }

.btn {
  /* NOTE: :x is a psuedo class - defines the state of the btn element - here both visited and visited link */
  /* NOTE: Clicking a button sets it in the active state */
  /* Psuedo element added after the button which is animated */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    /* Padding of 15px for top and bottom. Padding of 40px for left and right */
    padding: 1.5rem 4rem;
    /* btn element is already an inline element but need it to give it some space from other elements */
    display: inline-block;
    margin: 0 auto;
    border-radius: 10rem;
    transition: all 0.2s;
    /* Position all children in relative to this parent if they have absolute positioning */
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-3px);
    /* box-shadow: x y blur colour */
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* Change styling properties of the psuedo element when btn element is hovered */ }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn::after {
    /* Need to specify content, otherwise psuedo element will not appear on page */
    content: "";
    /* btn is an inline-block as is its psuedo element */
    display: inline-block;
    /* The psuedo element is btn element's child. Resizing to cover the full parent. */
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    /* Move the psuedo element behind the current btn element and position it
      so that it is aligned perfectly behind the btn element */
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    /* Animate psuedo elements by applying and removing (transitioning) their properties within 0.4 seconds */
    transition: all 0.4s; }
  .btn--animated {
    /* animation: animation-name animation-duration animation-timing-function animation-delay */
    animation: moveInBottom 0.5s ease-out 0.75s;
    /* Apply the properties of moveInBottom keyframe at 0% before animation starts */
    animation-fill-mode: backwards; }
  .btn-text:link, .btn-text:visited {
    font-size: 1.6rem;
    color: #55c57a;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid #55c57a;
    padding: 3px;
    transition: all 0.2s; }
  .btn-text:hover {
    background-color: #55c57a;
    color: #fff;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
    transform: translateY(-2px); }
  .btn-text:active {
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    transform: translateY(0); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all 0.2s;
    outline-offset: 2rem; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      outline: 1.5rem solid #55c57a;
      transform: scale(1.05) translateY(-0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20;
      transform: scale(1.2); }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform 0.3s; }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: 0.5rem;
    display: inline-block;
    background-image: linear-gradient(to right, #7ed56f, #28b485);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent; }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }

.card {
  perspective: 150rem;
  -moz-perspective: 150rem;
  -webkit-perspective: 150rem;
  position: relative;
  height: 50rem; }
  .card__side {
    color: #fff;
    font-size: 2rem;
    height: 50rem;
    -webkit-transition: all 0.8s ease;
    transition: all 0.8s ease;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    border-radius: 3px;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15); }
    .card__side--front {
      background-color: #fff; }
      .card__side--front-1 {
        background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
    .card__side--back {
      transform: rotateY(180deg);
      -webkit-transform: rotateY(180deg); }
      .card__side--back-1 {
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
  .card:hover .card__side--front {
    transform: rotateY(-180deg);
    -webkit-transform: rotateY(-180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0);
    -webkit-transform: rotateY(0); }

.header {
  /* Set size of the element to 95% of the viewport height */
  height: 95vh;
  /* The first arg passed in will stay on top */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  /* Size of background image to fit the element it is inside of */
  background-size: cover;
  /* Ensure the image is fixed to the top of the page so a resizing will eat away from the bottom */
  background-position: top;
  /* Position all children elements in relative to this element if they have absolute positioning */
  position: relative;
  /* Specifies a clipping path where everything inside the path is visible and everything outside is clipped out. */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    /* Reference position from which we count these pixel is the parent element which has a position set to relative */
    /* 4rem = 40px */
    top: 4rem;
    left: 4rem; }
  .header__logo {
    /* Size of image. Aspect ratio is kept so width is automatically calculated */
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    /* Position the element 50% of the width and height of the parent element to right and down */
    top: 40%;
    left: 50%;
    /* Move the element 50% of its size to left and up */
    transform: translate(-50%, -50%);
    /* Sets the children textual elements to center*/
    text-align: center; }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }
